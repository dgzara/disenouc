{% extends 'pDevPracticasBundle::layout.html.twig' %}
        
{%block breadcrumb%}
    {{parent()}}
{%endblock%}

{%block header%}Plan de práctica{%endblock%}
{%block lead%}1 de 3: Detalles de la práctica{%endblock%}

{%block content %}
    <form class="form-well form-horizontal" action="{% if entity.practica %}{{ path('practicas_alumno_create_source', {'id': entity.practica.id}) }}{% else %}{{ path('practicas_alumno_create') }}{% endif %}" method="post" {{ form_enctype(form) }}>
        {% if entity.practica %}    
           <div class="alert alert-info" role="alert">
            Postulando a <strong>{{ entity.practica.organizacionAlias }}</strong><br>
            Fecha de inicio: {{ entity.practica.fechaInicio|date('d-m-Y') }}<br>
            Fecha de término: {{ entity.practica.fechaTermino|date('d-m-Y') }}<br>
           </div>
        {% else %}
        {{ form_row(form.organizacionAlias) }}
        {{ form_row(form.supervisor) }}
        {{ form_row(form.comoContacto) }}
        {{ form_row(form.fechaInicio) }}
        {{ form_row(form.fechaTermino) }}
        {% endif %}
        
        {{ form_row(form.tipo) }}
        {{ form_row(form.codigoPractica) }}
        {{ form_row(form.ultimoTaller) }}
        {{ form_row(form.ultimoTallerProfesor) }}
        
        <div class="control-group">
            <label for="pdev_practicasbundle_alumnopracticantetype_horasLunes" class="control-label" style="margin-top:23px;">
                Horas (240 horas)
                <abbr title="Mínimo: 2 veces a la semana. Máximo: 5 veces a la semana. Mínimo diario: 4 horas. Máximo diario: 8 horas." class="tooltip-append" title=""><span class="glyphicon glyphicon-question-sign"></span></abbr>
            </label>
            <div class="controls">
                <table>
                    <tr>
                        <th>Lun</th>
                        <th>Mar</th>
                        <th>Mié</th>
                        <th>Jue</th>
                        <th>Vie</th>
                        <th>Sáb</th>
                        <th>Horas</th>
                    </tr>
                    <tr>
                        <td>{{ form_widget(form.horasLunes) }}</td>
                        <td>{{ form_widget(form.horasMartes) }}</td>
                        <td>{{ form_widget(form.horasMiercoles) }}</td>
                        <td>{{ form_widget(form.horasJueves) }}</td>
                        <td>{{ form_widget(form.horasViernes) }}</td>
                        <td>{{ form_widget(form.horasSabado) }}</td>
                        <td id="totalHoras"></td>
                    </tr>
                </table>
            </div>
        </div>
        <hr/>
        
        <h4>Proyectos y responsabilidades (en acuerdo con el empleador)
            <abbr title="Mínimo: 3. Máximo: 5" class="tooltip-append" title=""><span class="glyphicon glyphicon-question-sign"></span></abbr>
        </h4>
        <div id="proyectos" data-prototype="{{ form_widget(form.proyectos.vars.prototype)|e }}">
            {% for proyecto in form.proyectos %}
            <div class="proyecto">
                {{ form_widget(proyecto) }}
            </div>
            {% endfor %}
        </div>
        <div class="clearfix"></div>
        <hr/>
        
        <h4>Desafíos personales que desea lograr el alumno 
            <abbr title="5 desafíos." class="tooltip-append" title=""><span class="glyphicon glyphicon-question-sign"></span></abbr>
        </h4>
        <div id="desafios" data-prototype="{{ form_widget(form.desafios.vars.prototype)|e }}">
            {% for desafio in form.desafios %}
            <div class="desafio">
                {{ form_widget(desafio) }}
            </div>
            {% endfor %}
        </div>
        <div class="clearfix"></div>
        <hr/>
        
        {{ form_rest(form) }}
        <p>
            <button class="btn btn-primary pull-right" type="submit"> Guardar y continuar: Carta gantt</button>
        </p>
        <div class="clearfix"></div>
    </form>
    
{% endblock %}

{% block javascriptload%}
    <script type="text/javascript">
    
        var fields = [];
        var horas = [];
        horas[1] = $('#pdev_practicasbundle_alumnopracticantetype_horasLunes');
        fields.push(horas[1]);
        horas[2] = $('#pdev_practicasbundle_alumnopracticantetype_horasMartes');
        fields.push(horas[2]);
        horas[3] = $('#pdev_practicasbundle_alumnopracticantetype_horasMiercoles');    
        fields.push(horas[3]);
        horas[4] = $('#pdev_practicasbundle_alumnopracticantetype_horasJueves');    
        fields.push(horas[4]);
        horas[5] = $('#pdev_practicasbundle_alumnopracticantetype_horasViernes');    
        fields.push(horas[5]);
        horas[6] = $('#pdev_practicasbundle_alumnopracticantetype_horasSabado');
        fields.push(horas[6]);
        
        {% if entity.practica == null %}
        var fechaIn = $('input#pdev_practicasbundle_alumnopracticantetype_fechaInicio');
        fields.push(fechaIn);
        var fechaTe = $('input#pdev_practicasbundle_alumnopracticantetype_fechaTermino');    
        fields.push(fechaTe);
        {% endif %}
        
        var $collectionHolder;

        // setup an "add a tag" link
        var $addTagLink = $('<a class="btn btn-primary pull-right">Agregar proyecto</a>');
        var $addTagLink2 = $('<a class="btn btn-primary pull-right">Agregar desafío</a>');
        var $newLinkLi = $('<div></div>').append($addTagLink);
        var $newLinkLi2 = $('<div></div>').append($addTagLink2);
        
        function addForm($collectionHolder, $newLinkLi) {
            // Get the data-prototype explained earlier
            var prototype = $collectionHolder.data('prototype');

            // get the new index
            var index = $collectionHolder.data('index');

            // Replace '__name__' in the prototype's HTML to
            // instead be a number based on how many items we have
            var newForm = prototype.replace(/__name__/g, index);

            // increase the index with one for the next item
            $collectionHolder.data('index', index + 1);

            // Display the form in the page in an li, before the "Add a tag" link li
            var $newFormLi = $('<div></div>').append(newForm);
            $newLinkLi.before($newFormLi);
            
            addTagFormDeleteLink($newFormLi);
        }
        
        function addTagFormDeleteLink($tagFormLi) {
            var $removeFormA = $('<a href="#" class="btn btn-small pull-right" style="margin-top:5px;">eliminar</a>');
            $tagFormLi.prepend($removeFormA);

            $removeFormA.on('click', function(e) {
                // prevent the link from creating a "#" on the URL
                e.preventDefault();

                // remove the li for the tag form
                $tagFormLi.remove();
            });
        }

        jQuery(document).ready(function() {
            $collectionHolder = $('#proyectos');
            $collectionHolder.append($newLinkLi);
            $collectionHolder.data('index', $collectionHolder.find(':input').length);
            
            $collectionHolder2 = $('#desafios');
            //$collectionHolder2.append($newLinkLi2);
            $collectionHolder2.data('index', $collectionHolder.find(':input').length);

            $addTagLink.on('click', function(e) {
                // prevent the link from creating a "#" on the URL
                e.preventDefault();

                // add a new tag form (see next code block)
                if($collectionHolder.find(':input').length<9)
                    addForm($collectionHolder, $newLinkLi);
            });
            
            $collectionHolder.find('div.proyecto').each(function() {
                //addTagFormDeleteLink($(this));
            });
            
            $addTagLink2.on('click', function(e) {
                // prevent the link from creating a "#" on the URL
                e.preventDefault();

                // add a new tag form (see next code block)
                addForm($collectionHolder2, $newLinkLi2);
            });
            
            $collectionHolder2.find('div.desafio').each(function() {
                //addTagFormDeleteLink($(this));
            });
            
            $.each(fields,function() {
                $(this).change(function() {
                    
                    calculateTotal();
                });
            });
            
            calculateTotal();
            
            $( ".date" ).each(function( index ) {
                $(this).datetimepicker({
                  pickTime: false
                }).on('changeDate', function(ev){
                    calculateTotal();
                });

            });
        });
        
        function calculateTotal()
        {
            {% if entity.practica %}
            var darr = daysBetween(parseDate("{{ entity.practica.fechaInicio|date('d-m-Y') }}"),parseDate("{{ entity.practica.fechaTermino|date('d-m-Y') }}"));
            {% else %}
            var darr = daysBetween(parseDate(fechaIn.val()),parseDate(fechaTe.val()));
            {% endif %}
            
            var total = 0;
            for(var i=1;i<7;i++)
            {
                total += parseInt(horas[i].val()) * parseInt('0'+darr[i]);
            }
            
            $('#totalHoras').html('<strong> = '+total+'</strong>');
            
            return total;
        }
        
        function daysBetween(startDate, endDate) {
            var days = [], current = startDate;
            while(current <= endDate) {
                if(days[current.getDay()] == undefined)
                    days[current.getDay()] = 1;
                else
                    days[current.getDay()]++;
                current = new Date(current.getTime() + (24 * 60 * 60 * 1000));
                
            }
            return days;
        }
        
        function parseDate(datestr)//dd-mm-yyyy
        {
            var datearr = datestr.split('-');
            return new Date(parseInt(datearr[2]), parseInt(datearr[1]-1), parseInt(datearr[0]));
        }
        
    </script>
{% endblock %}
